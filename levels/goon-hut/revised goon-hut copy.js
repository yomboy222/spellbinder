/* goon-hut.js */

/* code generated by command: python3 create_level.py "name=goon-hut" "initialSpells=reversal,change-letter" "initialRunes=v,w" "targetThing=treasure" "room=name:room1,things:hut goon portcullis,exits:W/room0/goon E/room2/portcullis" "room=name:room0,things:loot,exits:E/room1" "room=name:room2,things:tang oxen,exits:W/room1 E/room3/oxen" "room=name:room3,things:soiree treasure,exits:W/room2" */

levelList.push( { name:'goon-hut', difficulty:0 } );

getLevelFunctions['goon-hut'] = function() {

    let level = new Level('goon-hut');
    level.folderName = 'goon-hut';

    level.defineThingSubclasses = function() { 

        window.Goal = class Goal extends Thing {
        }

        window.Goat = class Goat extends Thing {
        }

        window.Goon = class Goon extends Thing {
        }

        window.Hut = class Hut extends Thing {
        }

        window.Lout = class Lout extends Thing {
        }

        window.Oven = class Oven extends Thing {
        }

        window.Tool = class Tool extends Thing {
        }

        window.Treasure = class Treasure extends Thing {
        }

        window.Vat = class Vat extends Thing {
        }

        window.Wool = class Wool extends Thing {
        }

    }

    level.getThing = function(word,room,x,y) {
        switch (word) {
            case 'goal' : return new Goal(word,room,x,y);
            case 'goat' : return new Goat(word,room,x,y);
            case 'goon' : return new Goon(word,room,x,y);
            case 'hut' : return new Hut(word,room,x,y);
            case 'lout' : return new Lout(word,room,x,y);
            case 'oven' : return new Oven(word,room,x,y);
            case 'tool' : return new Tool(word,room,x,y);
            case 'treasure' : return new Treasure(word,room,x,y);
            case 'vat' : return new Vat(word,room,x,y);
            case 'wool' : return new Wool(word,room,x,y);
            default : return undefined; // this will cause instantiation of plain-vanilla Thing.
        }
    }
    level.initialRoom = 'room1';
    level.initialX = 50; // expressed as % of way across x axis, i.e. value range is 0-100 
    level.initialY = 55;
    level.initialSpells = [ 'reversal', 'change-letter' ];
    level.initialInventory = {};
    level.backgroundMusicFile = undefined;
    level.allWords = [ 'gang','gnat','goal','goat','gong','goon','gown','gut','hat','hut','loon','loot','lout','nut','oat','oven','oxen','soiree','tang','tool','toon','town','treasure','tug','tun','tux','vat','wool' ];
    level.initialThings = [ ['hut','room1',40,65],['goon','room1',18,50],['loot','room0',40,65],['tang','room2',40,65],['oxen','room2',81,50],['soiree','room3',40,65],['treasure','room3',60,65] ];
    level.targetThing = 'treasure';
    level.immovableObjects = [];
    level.initialRunes = ['v','w'];

    level.rooms = {
        'room1': {
            boundaries: [],
            filledPolygons: [],
            passages: [ 
               new Passage(PassageTypes.INVISIBLE_HORIZONTAL, 'W',3, 77, 'room0', 90, 50, true, 50, 50, 'goon', PASSAGE_STATE_BLOCKED, 26, 50),
               new Passage(PassageTypes.INVISIBLE_HORIZONTAL, 'E',97, 77, 'room2', 10, 50, true, 50, 50, 'portcullis', PASSAGE_STATE_BLOCKED, 73, 50)],
        },
        'room0': {
            boundaries: [],
            filledPolygons: [],
            passages: [ 
               new Passage(PassageTypes.INVISIBLE_HORIZONTAL, 'E',97, 50, 'room1', 10, 50, true, 50, 50)],
        },
        'room2': {
            boundaries: [],
            filledPolygons: [],
            passages: [ 
               new Passage(PassageTypes.INVISIBLE_HORIZONTAL, 'W',3, 50, 'room1', 90, 50, true, 50, 50),
               new Passage(PassageTypes.INVISIBLE_HORIZONTAL, 'E',97, 50, 'room3', 10, 50, true, 50, 50, 'oxen', PASSAGE_STATE_BLOCKED, 73, 50)],
        },
        'room3': {
            boundaries: [],
            filledPolygons: [],
            passages: [ 
               new Passage(PassageTypes.INVISIBLE_HORIZONTAL, 'W',3, 50, 'room2', 90, 50, true, 50, 50)],
        },
    };
    return level;
}