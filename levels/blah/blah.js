/* blah.js */

/* code generated by command: python3 create_level.py "name=blah" "target=treasure" "room=name:entry,things:soap bowtie fence,exits:E/room2/fence W/room3" "room=name:room2,things:trench,exits:W/entry N/room4/trench" "room=name:room3,exits:E/entry W/room5" "room=name:room4,exits:S/room2" "initialSpells=anagram,change-letter-nfs,remove-letter-nfs" "targetThing=bootie" */

levelList.push( { name:'blah', difficulty:0 } );

getLevelFunctions['blah'] = function() {

    let level = new Level('blah');
    level.levelPath = 'blah';

    level.defineThingSubclasses = function() { 

        window.Asp = class Asp extends Thing {
        }

        window.Fence = class Fence extends Thing {
        }

        window.Trench = class Trench extends Thing {
        }

        window.Wrench = class Wrench extends Thing {
        }

    }

    level.getThing = function(word,room,x,y) {
        switch (word) {
            case 'asp' : return new Asp(word,room,x,y);
            case 'fence' : return new Fence(word,room,x,y);
            case 'trench' : return new Trench(word,room,x,y);
            case 'wrench' : return new Wrench(word,room,x,y);
            default : return undefined; // this will cause instantiation of plain-vanilla Thing.
        }
    }
    level.initialRoom = 'entry';
    level.initialX = 50; // expressed as % of way across x axis, i.e. value range is 0-100 
    level.initialY = 55;
    level.initialSpells = [ 'anagram', 'change-letter-nfs', 'remove-letter-nfs' ];
    level.initialInventory = {};
    level.backgroundMusicFile = undefined;
    level.allWords = [ 'asp','bootie','bowtie','fence','paw','sap','saw','soap','sop','spa','tap','trench','wrench','wretch' ];
    level.initialThings = [ ['soap','entry',40,65],['bowtie','entry',60,65],['fence','entry',81,50],['trench','room2',50,18] ];
    level.targetThing = 'bootie';
    level.initialRunes = [];

    level.rooms = {
        'entry': {
            boundaries: [],
            filledPolygons: [],
            passages: [ 
               new Passage(PassageTypes.INVISIBLE_HORIZONTAL, 'E',97, 50, 'room2', 10, 50, true, 50, 50, 'fence', PASSAGE_STATE_BLOCKED, 73, 50),
               new Passage(PassageTypes.INVISIBLE_HORIZONTAL, 'W',3, 50, 'room3', 90, 50, true, 50, 50)],
        },
        'room2': {
            boundaries: [],
            filledPolygons: [],
            passages: [ 
               new Passage(PassageTypes.INVISIBLE_HORIZONTAL, 'W',3, 50, 'entry', 90, 50, true, 50, 50),
               new Passage(PassageTypes.INVISIBLE_VERTICAL, 'N',50, 3, 'room4', 50, 90, true, 50, 50, 'trench', PASSAGE_STATE_BLOCKED, 50, 26)],
        },
        'room3': {
            boundaries: [],
            filledPolygons: [],
            passages: [ 
               new Passage(PassageTypes.INVISIBLE_HORIZONTAL, 'E',97, 50, 'entry', 10, 50, true, 50, 50),
               new Passage(PassageTypes.INVISIBLE_HORIZONTAL, 'W',3, 50, 'room5', 90, 50, true, 50, 50)],
        },
        'room4': {
            boundaries: [],
            filledPolygons: [],
            passages: [ 
               new Passage(PassageTypes.INVISIBLE_VERTICAL, 'S',50, 97, 'room2', 50, 10, true, 50, 50)],
        },
    };
    return level;
}